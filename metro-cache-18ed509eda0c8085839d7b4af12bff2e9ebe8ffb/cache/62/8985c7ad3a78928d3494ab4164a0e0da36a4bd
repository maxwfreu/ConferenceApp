__d(function (global, require, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _react2 = require(_dependencyMap[0], "react");

  var _react3 = _interopRequireDefault(_react2);

  var _index = require(_dependencyMap[1], "./node_modules/react-transform-hmr/lib/index.js");

  var _index2 = _interopRequireDefault(_index);

  var _jsxFileName = "/Users/maxfreundlich/workspace/ConferenceApp/App.js";

  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

  var _reactNative = require(_dependencyMap[2], "react-native");

  var _SignIn = require(_dependencyMap[3], "./components/SignIn");

  var _SignIn2 = _interopRequireDefault(_SignIn);

  var _CreateProfile = require(_dependencyMap[4], "./components/SignIn/CreateProfile");

  var _CreateProfile2 = _interopRequireDefault(_CreateProfile);

  var _Main = require(_dependencyMap[5], "./components/Main");

  var _Main2 = _interopRequireDefault(_Main);

  var _reactNativeFirebase = require(_dependencyMap[6], "react-native-firebase");

  var _reactNativeFirebase2 = _interopRequireDefault(_reactNativeFirebase);

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

  var _components = {
    App: {
      displayName: "App"
    }
  };

  var _node_modulesReactTransformHmrLibIndexJs2 = (0, _index2.default)({
    filename: "/Users/maxfreundlich/workspace/ConferenceApp/App.js",
    components: _components,
    locals: [module],
    imports: [_react3.default]
  });

  function _wrapComponent(id) {
    return function (Component) {
      return _node_modulesReactTransformHmrLibIndexJs2(Component, id);
    };
  }

  var App = _wrapComponent("App")(function (_Component) {
    _inherits(App, _Component);

    function App(props) {
      _classCallCheck(this, App);

      var _this = _possibleConstructorReturn(this, (App.__proto__ || Object.getPrototypeOf(App)).call(this, props));

      _this.signIn = function (phoneNumber) {
        _this.setState({
          phoneNumber: phoneNumber
        });

        _reactNativeFirebase2.default.auth().signInWithPhoneNumber(phoneNumber).then(function (confirmResult) {
          return _this.setState({
            confirmResult: confirmResult
          });
        }).catch(function (error) {
          return _this.setState({
            message: "Sign In With Phone Number Error: " + error.message
          });
        });
      };

      _this.updateUserProfile = function (displayName) {
        var user = _reactNativeFirebase2.default.auth().currentUser;

        var that = _this;
        user.updateProfile({
          displayName: displayName
        }).then(function () {
          that.setState({
            updateProfile: false,
            user: _reactNativeFirebase2.default.auth().currentUser
          });
        }).catch(function (error) {
          that.setState({
            updateProfileError: true
          });
        });
      };

      _this.confirmCode = function (codeInput) {
        var confirmResult = _this.state.confirmResult;

        if (confirmResult && codeInput.length) {
          confirmResult.confirm(codeInput).then(function (user) {
            _this.setState({
              message: 'Code Confirmed!'
            });
          }).catch(function (error) {
            return _this.setState({
              message: "Code Confirm Error: " + error.message
            });
          });
        }
      };

      _this.unsubscribe = null;
      _this.state = {
        user: null,
        message: '',
        codeInput: '',
        updateProfile: true,
        updateProfileError: false,
        confirmResult: null
      };
      _this.updateUserProfile = _this.updateUserProfile.bind(_this);
      return _this;
    }

    _createClass(App, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this2 = this;

        this.unsubscribe = _reactNativeFirebase2.default.auth().onAuthStateChanged(function (user) {
          if (user) {
            _this2.setState({
              user: user.toJSON()
            });
          } else {
            _this2.setState({
              user: null,
              message: '',
              updateProfile: true,
              updateProfileError: false,
              confirmResult: null
            });
          }
        });
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        if (this.unsubscribe) this.unsubscribe();
      }
    }, {
      key: "renderMessage",
      value: function renderMessage() {
        var message = this.state.message;
        if (!message.length) return null;
        return _react3.default.createElement(
          _reactNative.Text,
          {
            style: {
              padding: 5,
              backgroundColor: '#000',
              color: '#fff'
            },
            __source: {
              fileName: _jsxFileName,
              lineNumber: 91
            }
          },
          message
        );
      }
    }, {
      key: "render",
      value: function render() {
        var _state = this.state,
            user = _state.user,
            confirmResult = _state.confirmResult,
            updateProfile = _state.updateProfile;
        var setDisplayName = false;

        if (user) {
          setDisplayName = !user.displayName || user.displayName === '';
        }

        return _react3.default.createElement(
          _reactNative.View,
          {
            style: {
              flex: 1
            },
            __source: {
              fileName: _jsxFileName,
              lineNumber: 102
            }
          },
          !user && !confirmResult && _react3.default.createElement(_SignIn2.default, {
            title: "Welcome!",
            description: "Enter your phone number to sync your device",
            placeholder: "Phone number ... ",
            initialVal: "+1",
            buttonText: "Send Verification Code",
            onClick: this.signIn,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 105
            }
          }),
          !user && confirmResult && _react3.default.createElement(_SignIn2.default, {
            title: "Message Sent!",
            description: "Enter your confirmation code",
            placeholder: "Confirmation Code...",
            buttonText: "Sign In",
            onClick: this.confirmCode,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 116
            }
          }),
          setDisplayName && updateProfile && _react3.default.createElement(_CreateProfile2.default, {
            phoneNumber: this.state.phoneNumber,
            onClick: this.updateUserProfile,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 125
            }
          }),
          user && _react3.default.createElement(_Main2.default, {
            user: user,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 132
            }
          })
        );
      }
    }]);

    return App;
  }(_react2.Component));

  exports.default = App;
});